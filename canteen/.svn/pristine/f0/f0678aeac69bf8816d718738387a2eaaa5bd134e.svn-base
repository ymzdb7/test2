package com.winhands.modules.restaurant.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.collections4.map.HashedMap;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.winhands.common.utils.PageUtils;
import com.winhands.common.utils.Query;
import com.winhands.common.utils.R;

import com.winhands.common.validator.ValidatorUtils;
import com.winhands.common.validator.group.AddGroup;
import com.winhands.modules.restaurant.entity.CarteBankEntity;
import com.winhands.modules.restaurant.entity.CarteTypeDishesEntity;
import com.winhands.modules.restaurant.entity.TypeEntity;
import com.winhands.modules.restaurant.service.CarteBankDishesService;
import com.winhands.modules.restaurant.service.CarteBankService;
import com.winhands.modules.restaurant.service.CarteTypeDishesService;
import com.winhands.modules.restaurant.service.TypeService;
import com.winhands.modules.sys.controller.AbstractController;


/**
 * 菜品类型管理
 * 
 */

@RestController
@RequestMapping("/restaurant/carteTypeDishes")
public class CarteTypeDishesController  extends AbstractController{
	@Autowired
	private CarteTypeDishesService carteTypeDishesService;
	@Autowired
	private CarteBankService carteBankService;
	
	
	
	
	
	//获取菜品种类列表

	@ResponseBody
	@RequestMapping("/list/{id}")	
	public R list(@PathVariable("id") Long id,@RequestParam Map<String, Object> params){
		
		//查询列表数据
		params.put("carteId", id);
		
		Query query = new Query(params);
		List<CarteTypeDishesEntity> carteTypeDishesList = carteTypeDishesService.queryList(query);
		int total = carteTypeDishesService.queryTotal(query);
	
		PageUtils pageUtil = new PageUtils(carteTypeDishesList, total, query.getLimit(), query.getPage());
		
		return R.ok().put("page", pageUtil);
	}

	/**
	 * 保存菜品类型
	 */
	@ResponseBody
	@RequestMapping(value="/save/{id}", method=RequestMethod.POST)
	public R save(@PathVariable("id") Long id,@RequestBody Long[] ides){
	
		carteTypeDishesService.delete(id);
		CarteTypeDishesEntity carteTypeDishes=new CarteTypeDishesEntity();
		for (int i = 0; i < ides.length; i++) {
		carteTypeDishes.setCarteId(id);
		carteTypeDishes.setDishesId(ides[i]);
		carteTypeDishesService.save(carteTypeDishes);
		
	}
		
	
		return R.ok();
	}
	
	
	/**
	 * 删除菜品种类
	 */
	@RequestMapping("/delete")
	public R delete(@RequestBody Long[] ids){
		carteTypeDishesService.deleteBatch(ids);
		
		return R.ok();
	}
	/**
	 * 获取对应菜单下的所有菜品
	 */
	/**
	 * 菜品种类信息
	 */
	@RequestMapping("/infooo")
	public R infooo(){
		Map<String,Object> map=new HashMap<String,Object>();
		List<CarteBankEntity> carteBankList =carteBankService.queryList(map);
		return R.ok().put("carteBankList", carteBankList);
	}
	
	
	
	
	/**
	 * 菜品种类信息
	 */
	@ResponseBody
	@RequestMapping(value="/getDishesByIdinfo/{id}", method=RequestMethod.POST)
	public R getDishesByIdinfo(@PathVariable("id") Long id ){
		Map<String,Object> map=new HashMap<String,Object>();
		map.put("carteId", id);
		List<CarteTypeDishesEntity> carteTypeDishes=carteTypeDishesService.queryListByDishes(map);
		return R.ok().put("carteTypeDishes", carteTypeDishes);
	}
	
	
	
	

}
